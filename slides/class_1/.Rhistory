xaringan:::inf_mr()
# Required libraries
library(ggplot2)
# Set parameters
mu <- 3.5
sigma <- sqrt(2.9167)
n <- 100      # Sample size
repeats <- 5000  # Number of simulations
# Simulation
results <- data.frame(Estimator_A = numeric(repeats), Estimator_B = numeric(repeats))
for (i in 1:repeats) {
sample_data <- rnorm(n, mu, sigma)
results$Estimator_A[i] <- mean(sample_data)
results$Estimator_B[i] <- mean(c(min(sample_data), max(sample_data)))
}
# Color definitions
primary_color <- "#8B7D6B"
secondary_color <- "#D43D51"
# Visualization
ggplot(results, aes(x=Estimator_A)) +
geom_density(aes(y=..density..), fill=primary_color, alpha=0.5) +
geom_density(aes(x=Estimator_B, y=..density..), fill=secondary_color, alpha=0.5) +
geom_vline(aes(xintercept=mean(Estimator_A)), color=primary_color, linetype="dashed") +
geom_vline(aes(xintercept=mean(Estimator_B)), color=secondary_color, linetype="dashed") +
annotate("text", x=mu-8, y=0.15, label=paste("Mean A: ", round(mean(results$Estimator_A),2)), color=primary_color) +
annotate("text", x=mu+8, y=0.15, label=paste("Mean B: ", round(mean(results$Estimator_B),2)), color=secondary_color) +
annotate("text", x=mu-8, y=0.13, label=paste("Var A: ", round(var(results$Estimator_A),2)), color=primary_color) +
annotate("text", x=mu+8, y=0.13, label=paste("Var B: ", round(var(results$Estimator_B),2)), color=secondary_color) +
labs(title=expression(paste("Distribución muestral de 2 estimatores de ", mu, " (n=100)")),
x="Estimado", y="Density") +
theme_minimal() +
theme(
axis.text.y = element_text(size = 22),
axis.text.x = element_text(size = 22),
axis.title.y = element_text(size = 24),
axis.title.x = element_text(size = 24),
panel.border = element_rect(color = "black", fill = NA, linewidth = 1)
)
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
data("GSSvocab")
data("GSSvocab"); educ_data <- GSSvocab
data("GSSvocab")
library("carData")
data("GSSvocab"); educ_data <- GSSvocab
View(educ_data)
data("GSSvocab"); educ_data <- sample(GSSvocab$educ,100)
educ_data
mean(GSSvocab$educ)
mean(GSSvocab$educ,na.rm=T)
mu
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
sample(educ_sample,1)
na.omit(educ_sample)
educ_sample
n <- 1000      # Sample size
repeats <- 5000  # Number of simulations
# Simulation
results <- data.frame(Estimator_A = numeric(repeats), Estimator_B = numeric(repeats))
for (i in 1:repeats) {
educ_sample <- sample(GSSvocab$educ, n, replace = TRUE) # Sample with replacement to get independent samples
results$Estimator_A[i] <- mean(educ_sample, na.rm=T)
results$Estimator_B[i] <- sample(educ_sample,1)
}
results
summary(results)
summary(educ_sample)
?sample
---
title: "Probabilidad e Inferencia Estadística"
---
title: "Probabilidad e Inferencia Estadística"
---
title: "Probabilidad e Inferencia Estadística"
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
install.packages(c("xaringan", "xaringanExtra", "xaringanthemer"))
xaringan:::inf_mr()
xaringan:::inf_mr()
xaringan:::inf_mr()
addmargins(ctable_uk, FUN = sum)
xaringan:::inf_mr()
chi2.test(ctable_usa)
chisq.test((ctable_usa))
chi2_usa <- chisq.test((ctable_usa))
names(chi2_usa)
chi2_usa$stdres
---
# Tablas de movilidad
xaringan:::inf_mr()
